"""Very small natural language to shell command mapper.

The original prototype relied on a static ``COMMAND_MAP`` dictionary.  The
comment on the previous pull request asked for this mapping to be generated by
an AI rather than being hard coded.  To keep the example self‑contained we do
not call an actual language model here; instead we provide a tiny heuristic
parser that infers a command based on keywords.  The function is intentionally
simple so it can later be replaced by a proper LLM backed implementation.
"""

from __future__ import annotations


def parse_command(text: str) -> str | None:
    """Return a shell command for the given natural language instruction.

    The current implementation performs very small keyword matching.  It is a
    placeholder for a future AI component that would understand the user's
    intent in a more flexible manner.
    """

    normalized = text.replace(" ", "").lower()

    if "作業系統" in normalized:
        return "uname -a"

    if "cuda" in normalized:
        # In real usage the CUDA installation method could be selected based on
        # distribution; here we keep a simple default command.
        return "sudo apt install -y cuda-toolkit"

    if "裝置" in normalized or "設備" in normalized:
        return "lspci"

    return None
